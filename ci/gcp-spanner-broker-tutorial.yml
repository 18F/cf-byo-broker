---
# There are some tasks that just need the broker name
gcp-service-broker-app-name: &gcp-service-broker-app-name
      GCP_SERVICE_BROKER_APP_NAME: gcp-service-broker-ci

# This are the creds used by the broker app when creating the service broker.
gcp-service-broker-app-creds: &gcp-service-broker-app-creds
      SECURITY_USER_NAME: ((security_user_name))
      SECURITY_USER_PASSWORD: ((security_user_password))

# Variable set in the broker manifest
gcp-service-broker-manifest-params: &gcp-service-broker-manifest-params
      << : *gcp-service-broker-app-name
      << : *gcp-service-broker-app-creds
      DB_HOST: ((db_host))
      DB_USERNAME: ((db_username))
      DB_PASSWORD: ((db_password))

gcp-service-broker-name: &gcp-service-broker-name
      GCP_SERVICE_BROKER_NAME: gcp-service-broker

gcp-spanner-service-name: &gcp-spanner-service-name
      GCP_SPANNER_SERVICE_NAME: gcp-spanner-service

# Cloud Foundry parameters
cf-params: &cf-params
      CF_API: ((cf_api))
      CF_USER: ((cf_user))
      CF_PWD: ((cf_password))
      CF_ORG: ((cf_org))
      CF_SPACE: ((cf_space))

resources:

- name: cg-customer-broker
  type: git
  source:
    uri: https://github.com/resilientscale/cg-customer-broker.git
    branch: master
    depth: 1

- name: gcp-service-broker
  type: git
  source:
    uri: https://github.com/GoogleCloudPlatform/gcp-service-broker.git
    branch: master
    depth: 1

- name: tutorial-s3-bucket
  type: s3
  source:
    bucket: ((artifact_bucket))
    region_name: ((artifact_bucket_region))
    versioned_file: gcp-spanner-tutorial-app.zip
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))

jobs:

# Deploy the service broker as an application
- name: deploy-gcp-service-broker
  serial_groups: [keep-it-simple]
  plan:
  - aggregate:
    - get: cg-customer-broker
    - get: gcp-service-broker
  - task: deploy-gcp-service-broker
    file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/deploy-gcp-service-broker.yml
    params:
      << : *cf-params
      << : *gcp-service-broker-manifest-params
      ROOT_SERVICE_ACCOUNT_JSON: ((root_service_account_json))
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/cleanup.yml
      params:
        << : *cf-params

# Create a service broker using the app deployed above.
- name: create-service-broker
  serial_groups: [keep-it-simple]
  plan:
  - get: cg-customer-broker
    passed: [deploy-gcp-service-broker]
    trigger: true
  - task: create-service-broker
    file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/create-service-broker.yml
    params:
      << : *cf-params
      << : *gcp-service-broker-app-name
      << : *gcp-service-broker-app-creds
      << : *gcp-service-broker-name
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/cleanup.yml
      params:
        << : *cf-params
        << : *gcp-service-broker-app-name
        << : *gcp-service-broker-name

# Exercise service broker with the example application
- name: exercise-gcp-spanner-service-broker
  serial_groups: [keep-it-simple]
  plan:
  - aggregate:
    - get: cg-customer-broker
      passed: [create-service-broker]
    - get: tutorial-s3-bucket
  - task: exercise-gcp-spanner-service-broker
    file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/exercise-gcp-spanner-service-broker.yml
    params:
      <<: *cf-params
      <<: *gcp-service-broker-name
      <<: *gcp-spanner-service-name
#    on_failure: &cleanup-task
#      task: cleanup
#      file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/cleanup.yml
#      params:
#        << : *cf-params
#        << : *gcp-service-broker-app-name
#        << : *gcp-service-broker-name
#        << : *gcp-spanner-service-name

# Cleanup all resources created by the pipeline.
#- name: cleanup
#  serial_groups: [keep-it-simple]
#  plan:
#  - get: cg-customer-broker
#    passed: [create-service-broker]
#    trigger: true
#  - task: cleanup
#    file: cg-customer-broker/ci/tasks/gcp-service-broker-tutorial/cleanup.yml
#    params:
#      << : *cf-params
#      << : *gcp-service-broker-app-name
#      << : *gcp-service-broker-name
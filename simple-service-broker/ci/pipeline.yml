---

broker-name: &broker-name
      BROKER_APPNAME: simple-service-broker

stratos-name: &stratos-name
      STRATOS_APPNAME: stratos

stratos-hostname: &stratos-hostname
      STRATOS_HOSTNAME: stratos-simple-service-broker

service-instance-name: &service-instance-name
      SERVICE_INSTANCE_NAME: simple-service-instance

cf-params: &cf-params
      CF_API: ((cf_api))
      CF_USER: ((cf_user))
      CF_PWD: ((cf_password))
      CF_ORG: ((cf_org))
      CF_SPACE: ((cf_space))

names: &names
      << : *broker-name
      << : *stratos-name
      << : *service-instance-name

broker-credentials: &broker-credentials
      BROKER_USERNAME: ((broker_username))
      BROKER_PASSWORD: ((broker_password))

broker-service-info: &broker-service-info
      BROKER_SERVICE_NAME: simple-service
      BROKER_PLAN_NAME: simple-service-plan-1

resources:

- name: cg-customer-broker
  type: git
  source:
    uri: https://github.com/resilientscale/cg-customer-broker.git
    branch: master
    depth: 1
    paths: [simple-service-broker/*]

- name: broker-source
  type: git
  source:
    uri: https://github.com/rscale-training/simple-service-broker.git
    branch: master
    depth: 1

- name: stratos
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/stratos.git
    tag_filter: stable
    branch: v2-master
    depth: 1

- name: broker-artifact
  type: s3
  source:
    bucket: ((artifact_bucket))
    region_name: us-west-2
    versioned_file: simple-service-broker.zip
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))

jobs:

- name: deploy-broker
  serial_groups: [serial]
  plan:
  - aggregate:
    - get: cg-customer-broker
      trigger: true
    - get: broker-source
      trigger: true
  - task: deploy
    file: cg-customer-broker/simple-service-broker/ci/tasks/deploy.yml
    params: *cf-params
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/simple-service-broker/ci/tasks/cleanup.yml
      params:
        << : *cf-params
        << : *names
  - task: curl-catalog
    file: cg-customer-broker/simple-service-broker/ci/tasks/curl-catalog.yml
    params:
      << : *broker-name
      << : *broker-service-info
      << : *cf-params
      << : *broker-credentials
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/simple-service-broker/ci/tasks/cleanup.yml
      params:
        << : *cf-params
        << : *names

- name: create-service-broker
  serial_groups: [serial]
  plan:
  - aggregate:
    - get: cg-customer-broker
      trigger: true
      passed: [deploy-broker]
    - get: broker-source
      trigger: true
      passed: [deploy-broker]
  - task: create-service-broker
    file: cg-customer-broker/simple-service-broker/ci/tasks/create-service-broker.yml
    params:
      << : *cf-params
      << : *broker-name
      << : *broker-credentials
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/simple-service-broker/ci/tasks/cleanup.yml
      params:
        << : *cf-params
        << : *names
  - task: service-brokers
    file: cg-customer-broker/simple-service-broker/ci/tasks/service-brokers.yml
    params:
      << : *broker-name
      << : *cf-params
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/simple-service-broker/ci/tasks/cleanup.yml
      params:
        << : *cf-params
        << : *names

- name: marketplace-via-cli
  serial_groups: [serial]
  plan:
  - aggregate:
    - get: cg-customer-broker
      trigger: true
      passed: [create-service-broker]
    - get: broker-source
      trigger: true
      passed: [create-service-broker]
  - task: marketplace
    file: cg-customer-broker/simple-service-broker/ci/tasks/marketplace.yml
    params:
      << : *cf-params
      << : *broker-service-info
    on_failure: &cleanup-task
      task: cleanup
      file: cg-customer-broker/simple-service-broker/ci/tasks/cleanup.yml
      params:
        << : *cf-params
        << : *names

- name: cleanup
  serial_groups: [serial]
  plan:
  - get: cg-customer-broker
    passed: [marketplace-via-cli]
    # trigger: true
  - task: cleanup
    file: cg-customer-broker/simple-service-broker/ci/tasks/cleanup.yml
    params:
      << : *cf-params
      << : *names

- name: package-broker
  serial_groups: [serial]
  plan:
  - aggregate:
    - get: cg-customer-broker
      passed: [marketplace-via-cli]
    - get: broker-source
      passed: [marketplace-via-cli]
      trigger: true
  - task: package-broker
    file: cg-customer-broker/simple-service-broker/ci/tasks/package-broker.yml
  - put: broker-artifact
    params:
      acl: public-read
      file: output/simple-service-broker.zip

- name: deploy-stratos
  plan:
  - aggregate:
    - get: cg-customer-broker
    - get: stratos
  - task: deploy-stratos
    file: cg-customer-broker/simple-service-broker/ci/tasks/deploy-stratos.yml
    params:
      << : *cf-params
      << : *stratos-name
      << : *stratos-hostname

- name: delete-stratos
  plan:
  - aggregate:
    - get: cg-customer-broker
    - get: stratos
  - task: delete-stratos
    file: cg-customer-broker/simple-service-brokerci/tasks/delete-stratos.yml
    params:
      << : *cf-params
      << : *stratos-name
